// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Storyshots Button Default 1`] = `
<button
  className="ant-btn ant-btn-default"
  data-test="button"
  disabled={false}
  onClick={[Function]}
  type="button"
>
  <span>
    Default
  </span>
</button>
`;

exports[`Storyshots Button Disabled 1`] = `
<button
  className="ant-btn ant-btn-default"
  data-test="button"
  disabled={true}
  onClick={[Function]}
  type="button"
>
  <span>
    Disabled
  </span>
</button>
`;

exports[`Storyshots Button Google 1`] = `
<button
  className="ant-btn ant-btn-default google-0-2-3"
  data-test="button"
  disabled={false}
  onClick={[Function]}
  type="button"
>
  <span
    aria-label="google"
    className="anticon anticon-google"
    role="img"
  >
    <svg
      aria-hidden="true"
      className=""
      data-icon="google"
      fill="currentColor"
      focusable="false"
      height="1em"
      viewBox="64 64 896 896"
      width="1em"
    >
      <path
        d="M881 442.4H519.7v148.5h206.4c-8.9 48-35.9 88.6-76.6 115.8-34.4 23-78.3 36.6-129.9 36.6-99.9 0-184.4-67.5-214.6-158.2-7.6-23-12-47.6-12-72.9s4.4-49.9 12-72.9c30.3-90.6 114.8-158.1 214.7-158.1 56.3 0 106.8 19.4 146.6 57.4l110-110.1c-66.5-62-153.2-100-256.6-100-149.9 0-279.6 86-342.7 211.4-26 51.8-40.8 110.4-40.8 172.4S151 632.8 177 684.6C240.1 810 369.8 896 519.7 896c103.6 0 190.4-34.4 253.8-93 72.5-66.8 114.4-165.2 114.4-282.1 0-27.2-2.4-53.3-6.9-78.5z"
      />
    </svg>
  </span>
  <span>
    Sign in with Google
  </span>
</button>
`;

exports[`Storyshots Button Loading 1`] = `
<span
  className="container-0-2-1 container-d0-0-2-2"
>
  Â 
</span>
`;

exports[`Storyshots Button Pending 1`] = `
<button
  className="ant-btn ant-btn-default"
  data-test="button"
  disabled={true}
  onClick={[Function]}
  type="button"
>
  <span
    style={
      Object {
        "paddingRight": 8,
      }
    }
  >
    <div
      className="ant-spin ant-spin-spinning"
    >
      <span
        aria-label="loading"
        className="anticon anticon-loading ant-spin-dot"
        role="img"
        style={
          Object {
            "fontSize": 16,
          }
        }
      >
        <svg
          aria-hidden="true"
          className="anticon-spin"
          data-icon="loading"
          fill="currentColor"
          focusable="false"
          height="1em"
          viewBox="0 0 1024 1024"
          width="1em"
        >
          <path
            d="M988 548c-19.9 0-36-16.1-36-36 0-59.4-11.6-117-34.6-171.3a440.45 440.45 0 00-94.3-139.9 437.71 437.71 0 00-139.9-94.3C629 83.6 571.4 72 512 72c-19.9 0-36-16.1-36-36s16.1-36 36-36c69.1 0 136.2 13.5 199.3 40.3C772.3 66 827 103 874 150c47 47 83.9 101.8 109.7 162.7 26.7 63.1 40.2 130.2 40.2 199.3.1 19.9-16 36-35.9 36z"
          />
        </svg>
      </span>
    </div>
  </span>
  <span>
    Pending
  </span>
</button>
`;

exports[`Storyshots Button Primary 1`] = `
<button
  className="ant-btn ant-btn-primary"
  data-test="button"
  disabled={false}
  onClick={[Function]}
  type="button"
>
  <span>
    Primary
  </span>
</button>
`;

exports[`Storyshots Button Primary Disabled 1`] = `
<button
  className="ant-btn ant-btn-primary"
  data-test="button"
  disabled={true}
  onClick={[Function]}
  type="button"
>
  <span>
    Primary Disabled
  </span>
</button>
`;

exports[`Storyshots Form Default 1`] = `
<FormProvider
  clearErrors={[Function]}
  control={
    Object {
      "defaultValuesRef": Object {
        "current": Object {},
      },
      "fieldArrayDefaultValues": Object {
        "current": Object {},
      },
      "fieldArrayNamesRef": Object {
        "current": Set {},
      },
      "fieldsRef": Object {
        "current": Object {},
      },
      "fieldsWithValidationRef": Object {
        "current": Object {},
      },
      "formStateRef": Object {
        "current": Object {
          "dirtyFields": Object {},
          "errors": Object {},
          "isDirty": false,
          "isSubmitted": false,
          "isSubmitting": false,
          "isValid": false,
          "submitCount": 0,
          "touched": Object {},
        },
      },
      "getValues": [Function],
      "isWatchAllRef": Object {
        "current": false,
      },
      "mode": Object {
        "isOnAll": false,
        "isOnBlur": false,
        "isOnChange": false,
        "isOnSubmit": true,
        "isOnTouch": false,
      },
      "reValidateMode": Object {
        "isReValidateOnBlur": false,
        "isReValidateOnChange": true,
      },
      "readFormStateRef": Object {
        "current": Object {
          "dirtyFields": false,
          "errors": false,
          "isDirty": false,
          "isSubmitted": true,
          "isSubmitting": false,
          "isValid": false,
          "submitCount": false,
          "touched": false,
        },
      },
      "register": [Function],
      "removeFieldEventListener": [Function],
      "renderWatchedInputs": [Function],
      "resetFieldArrayFunctionRef": Object {
        "current": Object {},
      },
      "setValue": [Function],
      "trigger": [Function],
      "unmountFieldsStateRef": Object {
        "current": Object {},
      },
      "unregister": [Function],
      "updateFormState": [Function],
      "validFieldsRef": Object {
        "current": Object {},
      },
      "validateResolver": undefined,
      "watchFieldsHookRef": Object {
        "current": Object {},
      },
      "watchFieldsHookRenderRef": Object {
        "current": Object {},
      },
      "watchFieldsRef": Object {
        "current": Set {},
      },
      "watchInternal": [Function],
    }
  }
  errors={Object {}}
  formState={
    Object {
      "dirtyFields": Object {},
      "errors": Object {},
      "isDirty": false,
      "isSubmitted": false,
      "isSubmitting": false,
      "isValid": false,
      "submitCount": 0,
      "touched": Object {},
    }
  }
  getValues={[Function]}
  handleSubmit={[Function]}
  register={[Function]}
  reset={[Function]}
  setError={[Function]}
  setValue={[Function]}
  trigger={[Function]}
  unregister={[Function]}
  watch={[Function]}
>
  <form
    onSubmit={[Function]}
  >
    <Context.Provider
      value={
        Object {
          "initialValues": Object {
            "cloudType": "azure",
            "defaultCheckedKeys": Array [
              5,
            ],
            "firstName": "First Name",
          },
          "loading": false,
          "onSubmit": undefined,
        }
      }
    >
      <div
        className="container-0-2-4"
      >
        <FormInput
          label="First Name"
          name="firstName"
          required={true}
        />
        <FormInput
          label="Last Name"
          name="lastName"
        />
        <FormSelect
          label="Cloud Type"
          name="cloudType"
          options={
            Array [
              Object {
                "iconKey": "aws",
                "text": "AWS",
                "value": "aws",
              },
              Object {
                "iconKey": "azure",
                "text": "Azure",
                "value": "azure",
              },
              Object {
                "iconKey": "google-cloud",
                "text": "GCP",
                "value": "gcp",
              },
            ]
          }
        />
        <FormRadioGroup
          defaultValue="low"
          label="Severity"
          name="severity"
          options={
            Array [
              Object {
                "label": "High",
                "value": "high",
              },
              Object {
                "label": "Medium",
                "value": "medium",
              },
              Object {
                "label": "Low",
                "value": "low",
              },
            ]
          }
        />
        <FormTree
          label="Cloud Accounts"
          name="defaultCheckedKeys"
          treeData={
            Array [
              Object {
                "children": Array [
                  Object {
                    "children": Array [
                      Object {
                        "id": 3,
                        "name": "Prod Account",
                      },
                      Object {
                        "id": 4,
                        "name": "Dev Account",
                      },
                    ],
                    "id": 1,
                    "name": "Security",
                  },
                  Object {
                    "children": Array [
                      Object {
                        "id": 5,
                        "name": "Prod Account",
                      },
                      Object {
                        "id": 6,
                        "name": "Dev Account",
                      },
                      Object {
                        "id": 7,
                        "name": "Test Account",
                      },
                    ],
                    "id": 2,
                    "name": "Infrastructure",
                  },
                ],
                "id": 0,
                "name": "AWS",
              },
            ]
          }
        />
        <FormSubmitButton>
          Submit
        </FormSubmitButton>
      </div>
    </Context.Provider>
  </form>
</FormProvider>
`;

exports[`Storyshots Icon Custom 1`] = `
<img
  alt="https://dummyimage.com/600x400/000/fff&text=Dassana"
  height={64}
  src="https://dummyimage.com/600x400/000/fff&text=Dassana"
/>
`;

exports[`Storyshots Icon Predefined 1`] = `
<img
  alt="dassana"
  height={64}
  src="dassana-blue.png"
/>
`;

exports[`Storyshots Input Default 1`] = `
<div
  className="container-0-2-6 container-d0-0-2-8"
>
  <input
    className="ant-input"
    data-test="input"
    disabled={false}
    onBlur={[Function]}
    onChange={[Function]}
    onFocus={[Function]}
    onKeyDown={[Function]}
    placeholder=""
    type="text"
    value=""
  />
</div>
`;

exports[`Storyshots Input Error 1`] = `
<div
  className="container-0-2-6 container-d4-0-2-13"
>
  <input
    className="ant-input error-0-2-5"
    data-test="input"
    disabled={false}
    onBlur={[Function]}
    onChange={[Function]}
    onFocus={[Function]}
    onKeyDown={[Function]}
    placeholder=""
    type="text"
    value=""
  />
</div>
`;

exports[`Storyshots Input Full Width 1`] = `
<div
  className="container-0-2-6 container-d3-0-2-12"
>
  <input
    className="ant-input"
    data-test="input"
    disabled={false}
    onBlur={[Function]}
    onChange={[Function]}
    onFocus={[Function]}
    onKeyDown={[Function]}
    placeholder=""
    type="text"
    value=""
  />
</div>
`;

exports[`Storyshots Input Loading 1`] = `
<div
  className="container-0-2-6 container-d2-0-2-10"
>
  <div
    className="input-0-2-7"
  >
    <span
      className="container-0-2-1 container-d1-0-2-11"
    >
      Â 
    </span>
  </div>
</div>
`;

exports[`Storyshots Link Click 1`] = `
<a
  className="ant-typography"
  data-test="link"
  onClick={[Function]}
  style={
    Object {
      "WebkitLineClamp": null,
    }
  }
  target="_self"
>
  <u>
    Click
  </u>
</a>
`;

exports[`Storyshots Link Href 1`] = `
<a
  className="ant-typography"
  data-test="link"
  href=" "
  style={
    Object {
      "WebkitLineClamp": null,
    }
  }
  target="_self"
>
  <u>
    Href
  </u>
</a>
`;

exports[`Storyshots Notifications Error 1`] = `
<button
  className="ant-btn ant-btn-default"
  data-test="button"
  disabled={false}
  onClick={[Function]}
  type="button"
>
  <span>
    Error
  </span>
</button>
`;

exports[`Storyshots Notifications Info 1`] = `
<button
  className="ant-btn ant-btn-default"
  data-test="button"
  disabled={false}
  onClick={[Function]}
  type="button"
>
  <span>
    Info
  </span>
</button>
`;

exports[`Storyshots Notifications Success 1`] = `
<button
  className="ant-btn ant-btn-default"
  data-test="button"
  disabled={false}
  onClick={[Function]}
  type="button"
>
  <span>
    Success
  </span>
</button>
`;

exports[`Storyshots Notifications Warning 1`] = `
<button
  className="ant-btn ant-btn-default"
  data-test="button"
  disabled={false}
  onClick={[Function]}
  type="button"
>
  <span>
    Warning
  </span>
</button>
`;

exports[`Storyshots Radio Group Default 1`] = `
<div
  className="ant-radio-group ant-radio-group-solid"
>
  <label
    className="ant-radio-button-wrapper ant-radio-button-wrapper-checked"
  >
    <span
      className="ant-radio-button ant-radio-button-checked"
      style={Object {}}
    >
      <input
        checked={true}
        className="ant-radio-button-input"
        disabled={false}
        name="radioGroup"
        onBlur={[Function]}
        onChange={[Function]}
        onFocus={[Function]}
        type="radio"
        value="high"
      />
      <span
        className="ant-radio-button-inner"
      />
    </span>
    <span>
      High
    </span>
  </label>
  <label
    className="ant-radio-button-wrapper"
  >
    <span
      className="ant-radio-button"
      style={Object {}}
    >
      <input
        checked={false}
        className="ant-radio-button-input"
        disabled={false}
        name="radioGroup"
        onBlur={[Function]}
        onChange={[Function]}
        onFocus={[Function]}
        type="radio"
        value="medium"
      />
      <span
        className="ant-radio-button-inner"
      />
    </span>
    <span>
      Medium
    </span>
  </label>
  <label
    className="ant-radio-button-wrapper"
  >
    <span
      className="ant-radio-button"
      style={Object {}}
    >
      <input
        checked={false}
        className="ant-radio-button-input"
        disabled={false}
        name="radioGroup"
        onBlur={[Function]}
        onChange={[Function]}
        onFocus={[Function]}
        type="radio"
        value="low"
      />
      <span
        className="ant-radio-button-inner"
      />
    </span>
    <span>
      Low
    </span>
  </label>
</div>
`;

exports[`Storyshots Radio Group Partially Disabled 1`] = `
<div
  className="ant-radio-group ant-radio-group-solid"
>
  <label
    className="ant-radio-button-wrapper ant-radio-button-wrapper-checked"
  >
    <span
      className="ant-radio-button ant-radio-button-checked"
      style={Object {}}
    >
      <input
        checked={true}
        className="ant-radio-button-input"
        disabled={false}
        name="radioGroup"
        onBlur={[Function]}
        onChange={[Function]}
        onFocus={[Function]}
        type="radio"
        value="high"
      />
      <span
        className="ant-radio-button-inner"
      />
    </span>
    <span>
      High
    </span>
  </label>
  <label
    className="ant-radio-button-wrapper"
  >
    <span
      className="ant-radio-button"
      style={Object {}}
    >
      <input
        checked={false}
        className="ant-radio-button-input"
        disabled={false}
        name="radioGroup"
        onBlur={[Function]}
        onChange={[Function]}
        onFocus={[Function]}
        type="radio"
        value="medium"
      />
      <span
        className="ant-radio-button-inner"
      />
    </span>
    <span>
      Medium
    </span>
  </label>
  <label
    className="ant-radio-button-wrapper ant-radio-button-wrapper-disabled"
  >
    <span
      className="ant-radio-button ant-radio-button-disabled"
      style={Object {}}
    >
      <input
        checked={false}
        className="ant-radio-button-input"
        disabled={true}
        name="radioGroup"
        onBlur={[Function]}
        onChange={[Function]}
        onFocus={[Function]}
        type="radio"
        value="low"
      />
      <span
        className="ant-radio-button-inner"
      />
    </span>
    <span>
      Low
    </span>
  </label>
</div>
`;

exports[`Storyshots Select Default 1`] = `
<div
  className="container-0-2-15 container-d0-0-2-19"
>
  <div
    className="ant-select dropdown-0-2-16 ant-select-single ant-select-show-arrow"
    data-test="select"
    onBlur={[Function]}
    onFocus={[Function]}
    onKeyDown={[Function]}
    onKeyUp={[Function]}
    onMouseDown={[Function]}
  >
    <div
      className="ant-select-selector"
      onClick={[Function]}
      onMouseDown={[Function]}
    >
      <span
        className="ant-select-selection-search"
      >
        <input
          aria-activedescendant="undefined_list_0"
          aria-autocomplete="list"
          aria-controls="undefined_list"
          aria-haspopup="listbox"
          aria-owns="undefined_list"
          autoComplete="off"
          className="ant-select-selection-search-input"
          disabled={false}
          onChange={[Function]}
          onCompositionEnd={[Function]}
          onCompositionStart={[Function]}
          onKeyDown={[Function]}
          onMouseDown={[Function]}
          onPaste={[Function]}
          readOnly={true}
          role="combobox"
          style={
            Object {
              "opacity": 0,
            }
          }
          type="search"
          unselectable="on"
          value=""
        />
      </span>
      <span
        className="ant-select-selection-item"
        title=""
      >
        
      </span>
    </div>
    <span
      aria-hidden={true}
      className="ant-select-arrow"
      onMouseDown={[Function]}
      style={
        Object {
          "WebkitUserSelect": "none",
          "userSelect": "none",
        }
      }
      unselectable="on"
    >
      <span
        aria-label="down"
        className="anticon anticon-down ant-select-suffix"
        role="img"
      >
        <svg
          aria-hidden="true"
          className=""
          data-icon="down"
          fill="currentColor"
          focusable="false"
          height="1em"
          viewBox="64 64 896 896"
          width="1em"
        >
          <path
            d="M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z"
          />
        </svg>
      </span>
    </span>
  </div>
</div>
`;

exports[`Storyshots Select Full Width 1`] = `
<div
  className="container-0-2-15 container-d2-0-2-21"
>
  <div
    className="ant-select dropdown-0-2-16 ant-select-single ant-select-show-arrow"
    data-test="select"
    onBlur={[Function]}
    onFocus={[Function]}
    onKeyDown={[Function]}
    onKeyUp={[Function]}
    onMouseDown={[Function]}
  >
    <div
      className="ant-select-selector"
      onClick={[Function]}
      onMouseDown={[Function]}
    >
      <span
        className="ant-select-selection-search"
      >
        <input
          aria-activedescendant="undefined_list_0"
          aria-autocomplete="list"
          aria-controls="undefined_list"
          aria-haspopup="listbox"
          aria-owns="undefined_list"
          autoComplete="off"
          className="ant-select-selection-search-input"
          disabled={false}
          onChange={[Function]}
          onCompositionEnd={[Function]}
          onCompositionStart={[Function]}
          onKeyDown={[Function]}
          onMouseDown={[Function]}
          onPaste={[Function]}
          readOnly={true}
          role="combobox"
          style={
            Object {
              "opacity": 0,
            }
          }
          type="search"
          unselectable="on"
          value=""
        />
      </span>
      <span
        className="ant-select-selection-item"
      >
        <div
          className="option-0-2-18"
        >
          <span>
            Lorem
          </span>
        </div>
      </span>
    </div>
    <span
      aria-hidden={true}
      className="ant-select-arrow"
      onMouseDown={[Function]}
      style={
        Object {
          "WebkitUserSelect": "none",
          "userSelect": "none",
        }
      }
      unselectable="on"
    >
      <span
        aria-label="down"
        className="anticon anticon-down ant-select-suffix"
        role="img"
      >
        <svg
          aria-hidden="true"
          className=""
          data-icon="down"
          fill="currentColor"
          focusable="false"
          height="1em"
          viewBox="64 64 896 896"
          width="1em"
        >
          <path
            d="M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z"
          />
        </svg>
      </span>
    </span>
  </div>
</div>
`;

exports[`Storyshots Select Icon 1`] = `
<div
  className="container-0-2-15 container-d1-0-2-20"
>
  <div
    className="ant-select dropdown-0-2-16 ant-select-single ant-select-show-arrow"
    data-test="select"
    onBlur={[Function]}
    onFocus={[Function]}
    onKeyDown={[Function]}
    onKeyUp={[Function]}
    onMouseDown={[Function]}
  >
    <div
      className="ant-select-selector"
      onClick={[Function]}
      onMouseDown={[Function]}
    >
      <span
        className="ant-select-selection-search"
      >
        <input
          aria-activedescendant="undefined_list_0"
          aria-autocomplete="list"
          aria-controls="undefined_list"
          aria-haspopup="listbox"
          aria-owns="undefined_list"
          autoComplete="off"
          className="ant-select-selection-search-input"
          disabled={false}
          onChange={[Function]}
          onCompositionEnd={[Function]}
          onCompositionStart={[Function]}
          onKeyDown={[Function]}
          onMouseDown={[Function]}
          onPaste={[Function]}
          readOnly={true}
          role="combobox"
          style={
            Object {
              "opacity": 0,
            }
          }
          type="search"
          unselectable="on"
          value=""
        />
      </span>
      <span
        className="ant-select-selection-item"
      >
        <div
          className="option-0-2-18"
        >
          <span
            className="icon-0-2-17"
          >
            <img
              alt="aws.svg"
              height={15}
              src="aws.svg"
            />
          </span>
          <span>
            AWS
          </span>
        </div>
      </span>
    </div>
    <span
      aria-hidden={true}
      className="ant-select-arrow"
      onMouseDown={[Function]}
      style={
        Object {
          "WebkitUserSelect": "none",
          "userSelect": "none",
        }
      }
      unselectable="on"
    >
      <span
        aria-label="down"
        className="anticon anticon-down ant-select-suffix"
        role="img"
      >
        <svg
          aria-hidden="true"
          className=""
          data-icon="down"
          fill="currentColor"
          focusable="false"
          height="1em"
          viewBox="64 64 896 896"
          width="1em"
        >
          <path
            d="M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z"
          />
        </svg>
      </span>
    </span>
  </div>
</div>
`;

exports[`Storyshots Select Search 1`] = `
<div
  className="container-0-2-15 container-d3-0-2-22"
>
  <div
    className="ant-select dropdown-0-2-16 ant-select-single ant-select-show-arrow ant-select-show-search"
    data-test="select"
    onBlur={[Function]}
    onFocus={[Function]}
    onKeyDown={[Function]}
    onKeyUp={[Function]}
    onMouseDown={[Function]}
  >
    <div
      className="ant-select-selector"
      onClick={[Function]}
      onMouseDown={[Function]}
    >
      <span
        className="ant-select-selection-search"
      >
        <input
          aria-activedescendant="undefined_list_0"
          aria-autocomplete="list"
          aria-controls="undefined_list"
          aria-haspopup="listbox"
          aria-owns="undefined_list"
          autoComplete="off"
          className="ant-select-selection-search-input"
          disabled={false}
          onChange={[Function]}
          onCompositionEnd={[Function]}
          onCompositionStart={[Function]}
          onKeyDown={[Function]}
          onMouseDown={[Function]}
          onPaste={[Function]}
          readOnly={true}
          role="combobox"
          style={
            Object {
              "opacity": 0,
            }
          }
          type="search"
          unselectable="on"
          value=""
        />
      </span>
      <span
        className="ant-select-selection-item"
        title=""
      >
        
      </span>
    </div>
    <span
      aria-hidden={true}
      className="ant-select-arrow"
      onMouseDown={[Function]}
      style={
        Object {
          "WebkitUserSelect": "none",
          "userSelect": "none",
        }
      }
      unselectable="on"
    >
      <span
        aria-label="down"
        className="anticon anticon-down ant-select-suffix"
        role="img"
      >
        <svg
          aria-hidden="true"
          className=""
          data-icon="down"
          fill="currentColor"
          focusable="false"
          height="1em"
          viewBox="64 64 896 896"
          width="1em"
        >
          <path
            d="M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z"
          />
        </svg>
      </span>
    </span>
  </div>
</div>
`;

exports[`Storyshots Skeleton Circle 1`] = `
<span
  className="container-0-2-1 container-d3-0-2-24"
>
  Â 
</span>
`;

exports[`Storyshots Skeleton Count 1`] = `
Array [
  <span
    className="container-0-2-1 container-d4-0-2-25"
  >
    Â 
  </span>,
  <span
    className="container-0-2-1 container-d4-0-2-25"
  >
    Â 
  </span>,
  <span
    className="container-0-2-1 container-d4-0-2-25"
  >
    Â 
  </span>,
  <span
    className="container-0-2-1 container-d4-0-2-25"
  >
    Â 
  </span>,
  <span
    className="container-0-2-1 container-d4-0-2-25"
  >
    Â 
  </span>,
]
`;

exports[`Storyshots Skeleton Default 1`] = `
<span
  className="container-0-2-1 container-d2-0-2-23"
>
  Â 
</span>
`;

exports[`Storyshots Tag Colored 1`] = `
<span
  className="ant-tag ant-tag-has-color"
  style={
    Object {
      "backgroundColor": "#108ee9",
    }
  }
>
  Colored
</span>
`;

exports[`Storyshots Tag Colored Preset 1`] = `
<span
  className="ant-tag ant-tag-blue"
  style={
    Object {
      "backgroundColor": undefined,
    }
  }
>
  Blue
</span>
`;

exports[`Storyshots Tag Default 1`] = `
<span
  className="ant-tag"
  style={
    Object {
      "backgroundColor": undefined,
    }
  }
>
  Default
</span>
`;

exports[`Storyshots Toggle Checked Disabled 1`] = `
<button
  aria-checked={false}
  className="ant-switch ant-switch-disabled"
  data-test="toggle"
  disabled={true}
  onClick={[Function]}
  onKeyDown={[Function]}
  role="switch"
  type="button"
>
  <div
    className="ant-switch-handle"
  />
  <span
    className="ant-switch-inner"
  />
</button>
`;

exports[`Storyshots Toggle Default 1`] = `
<button
  aria-checked={false}
  className="ant-switch"
  data-test="toggle"
  onClick={[Function]}
  onKeyDown={[Function]}
  role="switch"
  type="button"
>
  <div
    className="ant-switch-handle"
  />
  <span
    className="ant-switch-inner"
  />
</button>
`;

exports[`Storyshots Toggle Disabled 1`] = `
<button
  aria-checked={false}
  className="ant-switch ant-switch-disabled"
  data-test="toggle"
  disabled={true}
  onClick={[Function]}
  onKeyDown={[Function]}
  role="switch"
  type="button"
>
  <div
    className="ant-switch-handle"
  />
  <span
    className="ant-switch-inner"
  />
</button>
`;

exports[`Storyshots Toggle Small 1`] = `
<button
  aria-checked={false}
  className="ant-switch ant-switch-small"
  data-test="toggle"
  onClick={[Function]}
  onKeyDown={[Function]}
  role="switch"
  type="button"
>
  <div
    className="ant-switch-handle"
  />
  <span
    className="ant-switch-inner"
  />
</button>
`;

exports[`Storyshots Tree Default 1`] = `
<ForwardRef
  blockNode={true}
  checkable={true}
  className=""
  data-test="tree"
  defaultCheckedKeys={Array []}
  defaultExpandAll={true}
  disabled={false}
  motion={
    Object {
      "motionAppear": false,
      "motionDeadline": 500,
      "motionName": "ant-motion-collapse",
      "onAppearActive": [Function],
      "onAppearEnd": [Function],
      "onAppearStart": [Function],
      "onEnterActive": [Function],
      "onEnterEnd": [Function],
      "onEnterStart": [Function],
      "onLeaveActive": [Function],
      "onLeaveEnd": [Function],
      "onLeaveStart": [Function],
    }
  }
  onCheck={[Function]}
  selectable={false}
  showIcon={false}
  treeData={
    Array [
      Object {
        "children": Array [
          Object {
            "children": Array [
              Object {
                "key": 3,
                "title": "Prod Account",
              },
              Object {
                "key": 4,
                "title": "Dev Account",
              },
            ],
            "key": 1,
            "title": "Security",
          },
          Object {
            "children": Array [
              Object {
                "key": 5,
                "title": "Prod Account",
              },
              Object {
                "key": 6,
                "title": "Dev Account",
              },
              Object {
                "key": 7,
                "title": "Test Account",
              },
            ],
            "key": 2,
            "title": "Infrastructure",
          },
        ],
        "key": 0,
        "title": "AWS",
      },
    ]
  }
/>
`;
